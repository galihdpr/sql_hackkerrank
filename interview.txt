/*
Write a query to print the contest_id, hacker_id, name, and the sums of total_submissions, total_accepted_submissions, total_views, and total_unique_views for each contest sorted by contest_id. Exclude the contest from the result if all four sums are 0.
*/
WITH CTE AS (
    SELECT C.CONTEST_ID, C.HACKER_ID, C.NAME, CL.COLLEGE_ID
    FROM CONTESTS C
    INNER JOIN COLLEGES CL
    ON C.CONTEST_ID = CL.CONTEST_ID
    AND EXISTS (SELECT 1 FROM SUBMISSION_STATS WHERE CHALLENGE_ID  IN
               (SELECT CHALLENGE_ID FROM CHALLENGES WHERE COLLEGE_ID = CL.COLLEGE_ID))
    
), CTE2 AS (
SELECT CONTEST_ID, HACKER_ID, NAME, 
ISNULL((SELECT SUM(TOTAL_SUBMISSIONS) FROM SUBMISSION_STATS 
WHERE CHALLENGE_ID IN (SELECT CHALLENGE_ID FROM CHALLENGES WHERE COLLEGE_ID = CTE.COLLEGE_ID )),0) AS TOTAL_SUBMISSIONS,
ISNULL((SELECT SUM(TOTAL_ACCEPTED_SUBMISSIONS) FROM SUBMISSION_STATS 
WHERE CHALLENGE_ID IN (SELECT CHALLENGE_ID FROM CHALLENGES WHERE COLLEGE_ID = CTE.COLLEGE_ID )),0) AS TOTAL_ACCEPTED_SUBMISSIONS,
ISNULL((SELECT SUM(TOTAL_VIEWS) FROM VIEW_STATS 
WHERE CHALLENGE_ID IN (SELECT CHALLENGE_ID FROM CHALLENGES WHERE COLLEGE_ID = CTE.COLLEGE_ID )),0) AS TOTAL_VIEWS,
ISNULL((SELECT SUM(TOTAL_UNIQUE_VIEWS) FROM VIEW_STATS 
WHERE CHALLENGE_ID IN (SELECT CHALLENGE_ID FROM CHALLENGES WHERE COLLEGE_ID = CTE.COLLEGE_ID )),0) AS TOTAL_UNIQUE_VIEWS
FROM CTE
GROUP BY CONTEST_ID, HACKER_ID, NAME, COLLEGE_ID
    )
   SELECT CONTEST_ID, HACKER_ID, NAME,
    (SELECT SUM(TOTAL_SUBMISSIONS) FROM CTE2 
     WHERE CONTEST_ID = CTE.CONTEST_ID),
     (SELECT SUM(TOTAL_ACCEPTED_SUBMISSIONS) FROM CTE2 
     WHERE CONTEST_ID = CTE.CONTEST_ID),
     (SELECT SUM(TOTAL_VIEWS) FROM CTE2 
     WHERE CONTEST_ID = CTE.CONTEST_ID),
     (SELECT SUM(TOTAL_UNIQUE_VIEWS) FROM CTE2 
     WHERE CONTEST_ID = CTE.CONTEST_ID)
    FROM CTE
    GROUP BY CONTEST_ID, HACKER_ID, NAME
    ORDER BY CONTEST_ID ASC

